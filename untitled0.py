# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bIIW7ov-dUQZjEwx0iUCybRsA2iLQ_vR
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.read_csv("glass.csv")
df

x=df.drop('Fe' , axis=1)
y=df['Fe']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=1/3,random_state=0)

df.corr().style.background_gradient(cmap="Blues")

from sklearn.metrics import accuracy_score, recall_score, precision_score, classification_report, confusion_matrix
features = ['Rl', 'Na', 'Mg', 'Al', 'Si', 'K', 'Ca', 'Ba', 'Fe']
target = 'Type'


x_train, x_val, y_train, y_val = train_test_split(df[::-1], df['Type'],test_size=0.2, random_state=1)

classifier = GaussianNB()

classifier.fit(x_train, y_train)


y_pred = classifier.predict(x_val)

# Summary of the predictions made by the classifier
print(classification_report(y_val, y_pred))
print(confusion_matrix(y_val, y_pred))
# Accuracy score
from sklearn.metrics import accuracy_score
print('accuracy is',accuracy_score(y_val, y_pred))

from sklearn.svm import SVC, LinearSVC

classifier = LinearSVC()

classifier.fit(x_train, y_train)


y_pred = classifier.predict(x_val)

# Summary of the predictions made by the classifier
print(classification_report(y_val, y_pred))
print(confusion_matrix(y_val, y_pred))
# Accuracy score
from sklearn.metrics import accuracy_score
print('accuracy is',accuracy_score(y_val, y_pred))

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

datasets=pd.read_csv('Salary_Data.csv')
datasets

X = datasets.iloc[:, :-1].values
Y = datasets.iloc[:, 1].values

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=1/3,random_state=0)

from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(X_train,Y_train)

Y_pred=regressor.predict(X_test)

from sklearn.metrics import mean_squared_error
mean_squared_error(Y_test,Y_pred)

plt.scatter(X_train,Y_train,color='red')
plt.plot(X_train,regressor.predict(X_train),)
plt.title('Salary vs Experience(Train set)')
plt.xlabel('Experience in years')
plt.ylabel('Salary')

plt.scatter(X_test,Y_test,color='red')
plt.plot(X_train,regressor.predict(X_train),color='blue')
plt.title('Salary vs experience(Test set)')
plt.xlabel('Experience in years')
plt.ylabel('Salary')
plt.show()